stages:
  - prepare
  - build
  - deploy

variables:
  GIT_SUBMODULE_STRATEGY: recursive

.conan_install_job:
  stage: prepare
  tags:
    - urf
    - linux
  script:
    - conan install . -if build/${BUILD_TYPE}/${BUILD_SHARED}conan -s build_type=${BUILD_TYPE} -o shared=${BUILD_SHARED}
  artifacts:
    name: "$CI_JOB_NAME-$BUILD_TYPE-$BUILD_SHARED"
    paths:
      - build/
  only:
    - merge_requests

.conan_build_job:
  stage: build  
  tags:
    - urf
    - linux
  script:
    - conan build . -if build/${BUILD_TYPE}/${BUILD_SHARED}conan
  artifacts:
    name: "$CI_JOB_NAME-$BUILD_TYPE-$BUILD_SHARED"
    paths:
      - build/
  only:
    - merge_requests

.conan_upload_job:
  stage: deploy
  tags:
    - urf
    - linux
  script:
    - conan remote remove gitlab || true
    - conan remote add gitlab ${CI_API_V4_URL}/projects/$CI_PROJECT_ID/packages/conan
    - conan create . -s build_type=${BUILD_TYPE} -o shared=${BUILD_SHARED}
    - CONAN_LOGIN_USERNAME=ci_user CONAN_PASSWORD=${CI_JOB_TOKEN} conan upload "urf_common_cpp*" --all --remote=gitlab -c
  artifacts:
    name: "$CI_JOB_NAME-$BUILD_TYPE-$BUILD_SHARED"
    paths:
      - build/
  only:
    - master

install_static_release:
  extends: .conan_install_job
  before_script:
    - export BUILD_TYPE=Release
    - export BUILD_SHARED=False

build_static_release:
  extends: .conan_build_job
  before_script:
    - export BUILD_TYPE=Release
    - export BUILD_SHARED=False
    
deploy_static_release:
  extends: .conan_upload_job
  before_script:
    - export BUILD_TYPE=Release
    - export BUILD_SHARED=False

install_shared_release:
  extends: .conan_install_job
  before_script:
    - export BUILD_TYPE=Release
    - export BUILD_SHARED=True

build_shared_release:
  extends: .conan_build_job
  before_script:
    - export BUILD_TYPE=Release
    - export BUILD_SHARED=True
    
deploy_shared_release:
  extends: .conan_upload_job
  before_script:
    - export BUILD_TYPE=Release
    - export BUILD_SHARED=True
