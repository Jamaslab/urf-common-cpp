stages:
  - prepare
  - build
  - deploy

variables:
  GIT_SUBMODULE_STRATEGY: recursive

.conan_install_job: &conan_install_job_def
  stage: prepare
  tags:
    - urf
    - linux
  script:
    - conan install . -if build/conan -s build_type=$BUILD_TYPE -o shared=$BUILD_SHARED
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - build/

.conan_build_job: &conan_build_job_def
  stage: build  
  tags:
    - urf
    - linux
  script:
    - conan build . -if build/conan
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - build/

.conan_upload_job: &conan_upload_job_def
  stage: deploy
  tags:
    - urf
    - linux
  script:
    - conan remote remove gitlab || true
    - conan remote add gitlab ${CI_API_V4_URL}/projects/$CI_PROJECT_ID/packages/conan
    - conan create . -s build_type=$BUILD_TYPE -o shared=$BUILD_SHARED
    - CONAN_LOGIN_USERNAME=ci_user CONAN_PASSWORD=${CI_JOB_TOKEN} conan upload "urf_common_cpp*" --all --remote=gitlab -c
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - build/
  only:
    - master

install_static_release:
  <<: *conan_install_job_def
  variables:
    - BUILD_TYPE: Release
    - BUILD_SHARED: False

build_static_release:
  <<: *conan_build_job_def
  variables:
    - BUILD_TYPE: Release
    - BUILD_SHARED: False
    
deploy_static_release:
  <<: *conan_upload_job_def
  variables:
    - BUILD_TYPE: Release
    - BUILD_SHARED: False

install_shared_release:
  <<: *conan_install_job_def
  variables:
    - BUILD_TYPE: Release
    - BUILD_SHARED: True

build_shared_release:
  <<: *conan_build_job_def
  variables:
    - BUILD_TYPE: Release
    - BUILD_SHARED: True
    
deploy_shared_release:
  <<: *conan_upload_job_def
  variables:
    - BUILD_TYPE: Release
    - BUILD_SHARED: True
